#pragma once
//=====================================================================//
/*!	@file
	@brief	音楽、効果音関係
	@author	平松邦仁 (hira@rvf-rc45.net)
*/
//=====================================================================//
#include "psound.hpp"

namespace sound {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief	音楽、効果音クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	struct music {
		//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
		/*!
			@brief	音楽効果音 ID
		*/
		//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
		struct id {
			enum type {
				tetris_erase,
				tetris_fall,
				tetris_move,
				tetris_rot,
				collect,
				count_up,
				count_down,
				start,
				launch,

				bgm_01,
			};
		};

	private:
		device::psound&	ps_;

	public:
		//-----------------------------------------------------------------//
		/*!
			@brief	コンストラクター
		*/
		//-----------------------------------------------------------------//
		music(device::psound& ps) : ps_(ps) { }


		//-----------------------------------------------------------------//
		/*!
			@brief	発音
			@param[in]	no	発音番号
			@param[in]	prio	優先順位
		*/
		//-----------------------------------------------------------------//
		void request(id::type no, uint8_t prio);

	};
}
