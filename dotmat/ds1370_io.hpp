#pragma once
//=====================================================================//
/*!	@file
	@brief	DS1371 制御クラス
	@author	平松邦仁 (hira@rvf-rc45.net)
*/
//=====================================================================//
#include "twi.hpp"
#include "time.h"

namespace device {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief	DS1371 クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	class ds1371_io {

		twi&	twi_;

	public:
		//--------------------------------------------------------------//
		/*!
			@brief	コンストラクター
		*/
		//-------------------------------------------------------------//
		ds1371_io(twi& t) : twi_(t) { twi_.set_device_adr(0b11010000); }


		//--------------------------------------------------------------//
		/*!
			@brief	初期化
		*/
		//-------------------------------------------------------------//
		void init() {
			uint8_t tmp[2];
			tmp[0] = 0x07;		// DS1371 制御レジスターの初期化
			tmp[1] = 0x06;
			twi_.send(tmp, 2);
		}


		//--------------------------------------------------------------//
		/*!
			@brief	時間の読み込み
			@return 時間
		*/
		//-------------------------------------------------------------//
		time_t read() {
			uint8_t tmp[4];
			tmp[0] = 0;
			twi_.send(tmp, 1);	// set read address
			twi_.recv(&tmp[0], 1);
			twi_.recv(&tmp[1], 1);
			twi_.recv(&tmp[2], 1);
			twi_.recv(&tmp[3], 1);
			time_t t = static_cast<time_t>(tmp[0]) | (static_cast<time_t>(tmp[1]) << 8)
				| (static_cast<time_t>(tmp[2]) << 16) | (static_cast<time_t>(tmp[3]) << 24);
			return t;
		}


		//--------------------------------------------------------------//
		/*!
			@brief	時間の書き込み
			@param[in]	t	時間
		*/
		//-------------------------------------------------------------//
		void write(time_t t) {
			uint8_t tmp[5];
			tmp[0] = 0;	// write address.
			tmp[1] = t;
			tmp[2] = t >> 8;
			tmp[3] = t >> 16;
			tmp[4] = t >> 24;
			twi_.send(tmp, 5);	// set read address
		}
	};
}
