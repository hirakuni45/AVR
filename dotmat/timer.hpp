#pragma once
//=====================================================================//
/*!	@file
	@brief	タイマー関係（ヘッダー）
	@author	平松邦仁 (hira@rvf-rc45.net)
*/
//=====================================================================//
#include "task.hpp"
#include "twi.hpp"

namespace app {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief	キッチン・タイマー・クラス
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	class timer : public i_task {
		task&	task_;

		struct mode {
			enum type {
				time,			///< 時間表示
				date,			///< 日付表示
				setting,		///< 時間設定
			};
		};

		mode::type	mode_;

		uint32_t	time_;

		device::twi	twi_;

		uint32_t get_time_();
		void draw_date_(int16_t ofs, uint32_t cnt);
		void draw_time_(int16_t ofs, uint32_t cnt);
	public:
		//-----------------------------------------------------------------//
		/*!
			@brief	コンストラクター
		*/
		//-----------------------------------------------------------------//
		timer(task& t) : task_(t),
			mode_(mode::time), time_(0) { }


		//-----------------------------------------------------------------//
		/*!
			@brief	デストラクター
		*/
		//-----------------------------------------------------------------//
		virtual ~timer() { }


		//-----------------------------------------------------------------//
		/*!
			@brief	初期化
		*/
		//-----------------------------------------------------------------//
		void init();


		//-----------------------------------------------------------------//
		/*!
			@brief	サービス
		*/
		//-----------------------------------------------------------------//
		void service();


		//-----------------------------------------------------------------//
		/*!
			@brief	廃棄
		*/
		//-----------------------------------------------------------------//
		void destroy();
	};
}
